plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'dagger.hilt.android.plugin'
    id 'kotlin-kapt'
    id 'org.jetbrains.kotlin.plugin.parcelize'
}

def API_KEY
def localProperties = file('../local.properties')
if (localProperties.exists() && localProperties.canRead()) {
    Properties prop = new Properties()
    prop.load(new FileInputStream(localProperties))
    if (prop["API_KEY"] == null || prop["API_KEY"].isEmpty()) {
        throw new GradleException('Please add your own API key in the local.properites file as follow: API_KEY="YOUR_API_KEY"')
    }
    API_KEY = prop['API_KEY']
} else throw new GradleException('The local.properties file cannot be found or read, please create a local.properties file at the project root and please try again')

android {
    compileSdk 32

    defaultConfig {
        applicationId "iostudio.in.topmovies"
        minSdk 21
        targetSdk 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        buildConfigField("String", "API_KEY", API_KEY)
        buildConfigField("String", "HOST_NAME", '"*.themoviedb.org"')
        buildConfigField("String", "BASE_URL", '"https://api.themoviedb.org/"')
        buildConfigField("String", "ORIGINAL_IMAGE_URL", '"https://image.tmdb.org/t/p/original"')
        buildConfigField("String", "BASE_POSTER_URL", '"https://image.tmdb.org/t/p/w342"')
        buildConfigField("String", "PIN_CERTIFICATE_1", '"sha256/oD/WAoRPvbez1Y2dfYfuo4yujAcYHXdv1Ivb2v2MOKk="')
        buildConfigField("String", "PIN_CERTIFICATE_2", '"sha256/JSMzqOOrtyOT1kmau6zKhgT676hGgczD5VMdRMyJZFA="')
        buildConfigField("String", "PIN_CERTIFICATE_3", '"sha256/++MBgDH5WGvL9Bcn5Be30cRcL0f5O+NyoXuWtQdX1aI="')
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'

    // Material Design
    implementation 'com.google.android.material:material:1.6.0'

    //Hilt
    def hiltVersion = "2.40.1"
    def hiltViewModelVersion = "1.0.0-alpha03"
    implementation("com.google.dagger:hilt-android:$hiltVersion")
    kapt("com.google.dagger:hilt-android-compiler:$hiltVersion")
    implementation "androidx.hilt:hilt-lifecycle-viewmodel:$hiltViewModelVersion"

    // Kotlin coroutines with architecture components dependencies
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.5.0-beta01"
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.0'

    implementation 'androidx.fragment:fragment:1.4.1'

    // Activity KTX for viewModels()
    implementation "androidx.activity:activity-ktx:1.4.0"

    // Coroutines
    def coroutineVersion = "1.6.0"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutineVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutineVersion"

    // Coroutine Lifecycle Scopes
    def coroutineLifecycleVersion = "2.4.1"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$coroutineLifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$coroutineLifecycleVersion"

    // Retrofit
    def retrofitVersion = "2.9.0"
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:4.8.0"

    //Picasso
    def picassoVersion = "2.71828"
    implementation "com.squareup.picasso:picasso:$picassoVersion"
    implementation 'jp.wasabeef:picasso-transformations:2.4.0'

    //test
    testImplementation 'junit:junit:4.13.2'
    testImplementation "io.mockk:mockk:1.10.2"

    //For InstantTaskExecutorRule
    testImplementation "androidx.arch.core:core-testing:2.1.0"
    testImplementation "com.squareup.okhttp3:mockwebserver:5.0.0-alpha.2"
    testImplementation "org.jetbrains.kotlin:kotlin-stdlib:1.6.21"

    //For runBlockingTest, CoroutineDispatcher etc.
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.6.1'

    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

}

// Allow references to generated code
kapt {
    correctErrorTypes = true
}